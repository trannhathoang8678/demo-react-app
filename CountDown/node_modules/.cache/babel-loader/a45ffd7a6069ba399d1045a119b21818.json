{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/demo-react-app/src/components/CountDownClock/CountDownClock.jsx\";\nimport React from \"react\";\nimport \"./CountDownClock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minuteToSecond = 60,\n      hourToMinute = 60,\n      hourToSecond = minuteToSecond * 60,\n      dayToSecond = hourToSecond * 24,\n      dayToMili = dayToSecond * 1000;\n\nclass CountDownClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restTime: new Date(\"5/15/2021, 9:00:00 AM\").getTime() - new Date().getTime()\n    };\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.timerID = setInterval(() => this.countDown(), 1000);\n  }\n\n  turnOffTimer() {\n    clearInterval(this.timerID);\n  }\n\n  countDown() {\n    if (this.state.restTime === 0) {\n      this.turnOffTimer();\n      return;\n    }\n\n    this.setState(preState => {\n      return {\n        restTime: preState.restTime - 1\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Countdown to HEAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-by-unit\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime / dayToMili)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), \"Day\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime % dayToSecond / hourToSecond)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), \"Hour\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime % dayToSecond / hourToMinute % minuteToSecond)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), \"Minute\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: this.state.restTime / 1000 % minuteToSecond\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), \"Second\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CountDownClock;","map":{"version":3,"sources":["/home/raven/Documents/demo-react-app/src/components/CountDownClock/CountDownClock.jsx"],"names":["React","minuteToSecond","hourToMinute","hourToSecond","dayToSecond","dayToMili","CountDownClock","Component","constructor","props","state","restTime","Date","getTime","startTimer","timerID","setInterval","countDown","turnOffTimer","clearInterval","setState","preState","render","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AACA,MACEC,cAAc,GAAI,EADpB;AAAA,MAEEC,YAAY,GAAG,EAFjB;AAAA,MAGEC,YAAY,GAAGF,cAAc,GAAG,EAHlC;AAAA,MAIEG,WAAW,GAAGD,YAAY,GAAG,EAJ/B;AAAA,MAKEE,SAAS,GAAGD,WAAW,GAAG,IAL5B;;AAMA,MAAME,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EACN,IAAIC,IAAJ,CAAS,uBAAT,EAAkCC,OAAlC,KAA8C,IAAID,IAAJ,GAAWC,OAAX;AAFrC,KAAb;AAIA,SAAKC,UAAL;AACD;;AACDA,EAAAA,UAAU,GAAG;AACX,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,SAAL,EAAP,EAAyB,IAAzB,CAA1B;AACD;;AACDC,EAAAA,YAAY,GAAG;AACbC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AACDE,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKP,KAAL,CAAWC,QAAX,KAAwB,CAA5B,EAA+B;AAC7B,WAAKO,YAAL;AACA;AACD;;AACD,SAAKE,QAAL,CAAeC,QAAD,IAAc;AAC1B,aAAO;AAAEV,QAAAA,QAAQ,EAAEU,QAAQ,CAACV,QAAT,GAAoB;AAAhC,OAAP;AACD,KAFD;AAGD;;AACDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAA,kCACE;AAAA,oCACE;AAAA,wBAAOC,IAAI,CAACC,KAAL,CAAW,KAAKd,KAAL,CAAWC,QAAX,GAAsBN,SAAjC;AAAP;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,oCACE;AAAA,wBACGkB,IAAI,CAACC,KAAL,CAAY,KAAKd,KAAL,CAAWC,QAAX,GAAsBP,WAAvB,GAAsCD,YAAjD;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAUE;AAAA,oCACE;AAAA,wBACGoB,IAAI,CAACC,KAAL,CAAW,KAAKd,KAAL,CAAWC,QAAX,GAAsBP,WAAtB,GAAoCF,YAApC,GAAmDD,cAA9D;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAgBE;AAAA,oCACE;AAAA,wBACI,KAAKS,KAAL,CAAWC,QAAX,GAAoB,IAArB,GAA6BV;AADhC;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAvD0C;;AAyD7C,eAAeK,cAAf","sourcesContent":["import React from \"react\";\nimport \"./CountDownClock.css\";\nconst \n  minuteToSecond =  60,\n  hourToMinute = 60,\n  hourToSecond = minuteToSecond * 60,\n  dayToSecond = hourToSecond * 24,\n  dayToMili = dayToSecond * 1000;\nclass CountDownClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restTime:\n        new Date(\"5/15/2021, 9:00:00 AM\").getTime() - new Date().getTime(),\n    };\n    this.startTimer();\n  }\n  startTimer() {\n    this.timerID = setInterval(() => this.countDown(), 1000);\n  }\n  turnOffTimer() {\n    clearInterval(this.timerID);\n  }\n  countDown() {\n    if (this.state.restTime === 0) {\n      this.turnOffTimer();\n      return;\n    }\n    this.setState((preState) => {\n      return { restTime: preState.restTime - 1 };\n    });\n  }\n  render() {\n    return (\n      <div className=\"clock-container\">\n        <div className=\"title\">Countdown to HEAT</div>\n        <div className=\"clock-by-unit\">\n          <ul>\n            <li>\n              <span>{Math.floor(this.state.restTime / dayToMili)}</span>Day\n            </li>\n            <li>\n              <span>\n                {Math.floor((this.state.restTime % dayToSecond) / hourToSecond)}\n              </span>\n              Hour\n            </li>\n            <li>\n              <span>\n                {Math.floor(this.state.restTime % dayToSecond / hourToMinute % minuteToSecond)}\n              </span>\n              Minute\n            </li> \n            <li>\n              <span>\n                {(this.state.restTime/1000) % minuteToSecond}\n              </span>\n              Second\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CountDownClock;\n"]},"metadata":{},"sourceType":"module"}