{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/demo-react-app/src/components/CountDownClock/CountDownClock.jsx\";\nimport React from \"react\";\nimport \"./CountDownClock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minuteToSecond = 60,\n      hourToMinute = 60,\n      hourToSecond = minuteToSecond * 60,\n      dayToSecond = hourToSecond * 24,\n      dayToMili = dayToSecond * 1000;\n\nclass CountDownClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restTime: new Date(\"5/15/2021, 9:00:00 AM\").getTime() - new Date().getTime()\n    };\n  }\n\n  componentDidMount() {\n    this.setTime = setInterval(() => this.countDown(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.setTime);\n  }\n\n  countDown() {\n    if (this.state.restTime === 0) {\n      this.turnOffTimer();\n      return;\n    }\n\n    this.setState(preState => {\n      return {\n        restTime: preState.restTime - 1,\n        days: parseInt(restTime / (1000 * 60 * 60 * 24)),\n        hours: parseInt(restTime / (1000 * 60 * 60 * 24) % 60),\n        minutes: parseInt(restTime / 1000 / 60 % 60),\n        seconds: parseInt(restTime / 1000 % 60)\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Countdown to HEAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-by-unit\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime / dayToMili)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), \"Day\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime / (1000 * 60 * 60 * 24) % 60)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), \"Hour\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime / (1000 * 60) % 60)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), \"Minute\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: Math.floor(this.state.restTime / 1000 % 60)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), \"Second\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CountDownClock;","map":{"version":3,"sources":["/home/raven/Documents/demo-react-app/src/components/CountDownClock/CountDownClock.jsx"],"names":["React","minuteToSecond","hourToMinute","hourToSecond","dayToSecond","dayToMili","CountDownClock","Component","constructor","props","state","restTime","Date","getTime","componentDidMount","setTime","setInterval","countDown","componentWillUnmount","clearInterval","turnOffTimer","setState","preState","days","parseInt","hours","minutes","seconds","render","Math","floor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CountDownClock.css\";\nconst \n  minuteToSecond =  60,\n  hourToMinute = 60,\n  hourToSecond = minuteToSecond * 60,\n  dayToSecond = hourToSecond * 24,\n  dayToMili = dayToSecond * 1000;\n  \nclass CountDownClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restTime:\n        new Date(\"5/15/2021, 9:00:00 AM\").getTime() - new Date().getTime(),\n        \n    };\n    \n  }\n  componentDidMount() {\n    this.setTime = setInterval(() => this.countDown(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.setTime);\n  }\n  countDown() {\n    if (this.state.restTime === 0) {\n      this.turnOffTimer();\n      return;\n    }\n    this.setState((preState) => {\n      return { restTime: preState.restTime - 1,\n        days: parseInt(restTime / (1000 * 60 * 60 * 24)),\n        hours: parseInt(restTime / (1000 * 60 * 60 * 24) % 60),\n        minutes: parseInt((restTime / 1000 / 60) % 60),\n        seconds: parseInt((restTime / 1000) % 60),};\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"clock-container\">\n        <div className=\"title\">Countdown to HEAT</div>\n        <div className=\"clock-by-unit\">\n          <ul>\n            <li>\n              <span>{Math.floor(this.state.restTime / dayToMili)}</span>Day\n            </li>\n            <li>\n              <span>\n                {Math.floor((this.state.restTime /(1000*60*60*24) %60 ))}\n              </span>\n              Hour\n            </li>\n            <li>\n              <span>\n                {Math.floor(this.state.restTime /(1000*60) %60)} \n              </span>\n              Minute\n            </li> \n            <li>\n              <span>\n                {Math.floor(this.state.restTime /1000 % 60)}\n              </span>\n              Second\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CountDownClock;\n"]},"metadata":{},"sourceType":"module"}